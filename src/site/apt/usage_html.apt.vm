 ------
 Usage HTML Analysis
 ------
 ${project.properties.siteAuthors}
 ------
 ------

Usage HTML Analysis

  Definitions and use-cases for the <<{{{./html-mojo.html}${project.artifactId}:html}}>> goal.

* The {{{./html-mojo.html}clashinspector:html}} goal

  This goal starts a local server (localhost:8090), generates and opens a local HTML site for dynamic analysis of dependencies and dependency version clashes. To stop this server just press <Enter> in the command prompt.

  The main features are the {{{Dependency Tree}<dependency tree>}} and the {{{Clash-List}<clash-list>}}.
  Using {{{Settings & Properties}<settings & properties>}} you can define which dependencies you want to analyze.
  The {{{Search Dependencies}<search dependencies>}} feature enables a comfortable way to search and navigate through dependencies in the tree.

* Dependency Tree

  The dependency tree shows the dependencies of your project.

  Imagine you run this goal on a project <<<testproject.groupId:testproject-artifactId:1.0>>>. This project and its dependencies
  refer to several versions of <<<com.google.guava:guava>>>.

  In this case this project will be displayed in the top bar as follows:

[images/rootDep.png] root project visualization in the top bar in html-goal

  \
  Afterwards its dependencies will be represented as follows.

** Default Dependency Representation

[images/dep.png] dependency visualization in html-goal\

 [[1]] The first line shows the <groupId> of the dependency, here <<<com.google.guava>>>

 [[2]] The second line shows the <artifactId> of the dependency, here <<<guava>>>

 [[3]] The third line shows

       [[a]] the <version> of the dependency, here <<<13.0.1>>>

       [[b]] the <scope> of the dependency, which could be

             * <compile> represented by a <<<(c)>>>

             * <test> represented by a <<<(t)>>>

             * <runtime> represented by a <<<(r)>>>

             * <provided> represented by a <<<(p)>>> or

             * <system> represented by a <<<(s)>>>

       [[c]] an <<<(o)>>> if the dependency is <optional>, here it is not optional

       [[d]] an <<<(u)>>> if this dependency is <used by Maven> regarding to the {{{./version_clash.html}nearest definition}}, here it is the used version

 [[4]] On mouseover you have the opportunity to get {{{Detailed Dependency Representation}details}} of this dependency and to search this dependency on {{{http://www.maven.org}maven-central}} in a new tab, here this link would be {{{http://search.maven.org/#artifactdetails|com.google.guava|guava|13.0.1|jar}http://search.maven.org/#artifactdetails|com.google.guava|guava|13.0.1|jar}}.

 []

** Detailed Dependency Representation

[images/depDetailed.png] detailed dependency visualization in html-goal\

 [[1]] Shows the <used version> of this project <<(groupId:artifactId)>>, here <<<com.google.guava:guava>>>.\ <On click:> {{{Highlighted Dependency}highlights}} and jumps to that <used version> in the tree. Here this dependency will be highlighted, because it is the used one.

 [[2]] Shows the <highest version> of this project. Higher versions lead to {{{./version_clash.html}CRITICAL version clashes}}.\ <On click:> {{{Highlighted Dependency}highlights}} all dependencies in the tree with the <highest version>. In this case the highest version of <<<com.google.guava:guava>>> is <<<14.0.1>>>.

 [[3]] Shows the <lowest version> of this project. Lower versions lead to {{{./version_clash.html}UNSAFE version clashes}}.\ <On click:> {{{Highlighted Dependency}highlights}} all dependencies in the tree with the <lowest version>. In this case the lowest version of <<<com.google.guava:guava>>> is <<<12.0>>>.

 []

** Dependency Version Clashes

[images/depColors.png] dependency color visualization in html-goal\

  [[1]] gray: {{{./version_clash.html}<<SAFE>>}} dependency. This dependency

        [[a]] appears only once in the tree, so there can't be a version clash or

        [[b]] has the version which is used by Maven

  [[2]] yellow: {{{./version_clash.html}<<UNSAFE>>}} dependency. This dependency has a lower version than the used version.

  [[3]] red: {{{./version_clash.html}<<CRITICAL>>}} dependency. This dependency has a higher version than the used version.

  []

** Highlighted Dependency

  Every dependency can be highlighted. This is how a highlighted dependency looks like:

[images/depHighlighted.png] highlighted dependency visualization in html-goal\

** Dependency Tree Structure

	In the last chapters we talked about how dependencies look like.
  Now we will explain how they are structured as a tree.
	The following picture shows the tree for our already mentioned project <<<testproject.groupId:testproject-artifactId:1.0>>>.

[images/depTree.png] dependency tree visualization in html-goal\

	Dependencies are linked via arrows. There are four kinds of arrows which will be explained as follows:

[images/arrowGray.png] gray navigation arrow\

	<<Gray arrow - dependency has dependencies>>\
  This arrow shows, that the dependency has one or more {{{Dependency Version Clashes}safe dependencies}}.\
	<On click:> opens its dependencies.

[images/arrowYellow.png] yellow navigation arrow

  <<Yellow arrow - dependency has unsafe dependencies>>\
  This arrow shows, that this dependency or its descendants have one or more {{{Dependency Version Clashes}unsafe dependencies}}.
  If this dependency or its descendants have also critical dependencies the arrow of this dependency will be red instead.\
  <On click:> opens its dependencies.

[images/arrowRed.png] red navigation arrow

  <<Red arrow - dependency has critical dependencies>>\
  This arrow shows, that this dependency or its descendants have one or more {{{Dependency Version Clashes}critical dependencies}}.
  If this dependency or its descendants have also unsafe dependencies the arrow of this dependency will remain red.\
  <On click:> opens its dependencies.

[images/arrowDotted.png] dotted navigation arrow

  <<Dotted arrow - dependency has eventually dependencies>>\
  This arrow shows that the dependency has eventually one or more dependencies, which are omitted for duplicate at this graph-point, because the used version is already resolved.
	To see possible unresolved dependencies please check the maven-central link.\
	<Hint: we are planning a future release, that enables you to resolve these omitted dependencies as well.>

* Clash-List

	The clash-list lists the dependencies of your project which are <<UNSAFE>> or <<CRITICAL>>.

  In case of our project <<<testproject.groupId:testproject-artifactId:1.0>>> the clash-list would look as follows:

[images/clashList.png] clash list in html goal

  A click on the project <<<com.google.guava:guava>>> would highlight all version clashes of this project, here <<<12.0>>> (unsafe) and <<<14.0.1>>> (critical).

	A click on the version number e.g. <<<12.0>>> or <<<14.0.1>>> would highlight the corresponding dependency and jump to it.

* Settings & Properties

  The <settings & properties> section - which is accessible over the top bar - allows you to customize the
	dependency resolution and the visualization of the dependency tree and the clash-list.

[images/settings.png] settings in html-goal\

  <<Dependency Resolution Settings>>\
	This section allows you to set <included scopes>, <excluded scopes>, the <clash severity> and if you want to <include optional> dependencies.
	After a change in this section it is necessary to press the
	<Apply Settings>-button which starts a resampling of the dependency tree and the clash-list.

  <<Display Properties>>\
	This section allows you to switch between the <Full>-display mode - which is the standard mode - and the <Shortenend>-display
	mode. Using the <Shortenend>-display mode dependencies in the tree are displayed in a downsized way for a better overview.
	A shortened dependency shows only the <<<groupId>>> as follows:

[images/depShort.png] shortened dependency in html-goal\

	<On mouseover:> these dependencies will switch to full size.

* Search Dependencies

  The <search dependencies> section - which is accessible over the top bar - enables you
	a comfortable way to search and navigate through dependencies in the tree.

[images/search.png] search in html-goal\

	You can filter dependencies by <<<groupId>>>, <<<artifactId>>> and <<<version>>>.

	<<Example:>> <<<groupId>>> = <com.google.guava> would highlight all dependencies with this <<<groupId>>>.
	In our project <<<testproject.groupId:testproject-artifactId:1.0>>> there are four results. If there would be no results, <no result> would be displayed.

	Using the wildcard <<<*>>> you are able to filter a greater range of dependencies.\
	<Hint: So far there's only the possibility to set this wildcard at the end of an entry, not at the start.>

  <<Example:>> <<<groupId>>> = <com.*> would highlight all dependencies whose <<<groupId>>> start with <com.>.
  In our project <<<testproject.groupId:testproject-artifactId:1.0>>> there are still four results, like in our previous example.

	Using the arrows the view jumps between the results.

  The <clear>-Button removes all entered filters.
